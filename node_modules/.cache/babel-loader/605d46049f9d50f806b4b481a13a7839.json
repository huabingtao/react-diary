{"ast":null,"code":"import axios from \"axios\";\nimport Qs from \"qs\";\nimport { Toast } from \"antd-mobile\";\nconst instance = axios.create({\n  baseURL: \"http://139.196.94.6:3000/\",\n  timeout: 5000\n}); // request 拦截\n\ninstance.interceptors.request.use(config => {\n  if (config.method === \"get\") {\n    config.paramsSerializer = params => {\n      return Qs.stringify(params, {\n        arrayFormat: \"brackets\"\n      });\n    };\n  }\n\n  return config;\n}, error => {\n  return Promise.reject(error);\n}); // response 拦截\n\ninstance.interceptors.response.use(response => {\n  // 接口请求成功处理\n  return response;\n}, error => {\n  // 提示给用户具体报错信息\n  let errObj = JSON.parse(JSON.stringify(error));\n\n  if (errObj.message === \"Network Error\") {\n    Toast.fail(\"服务器异常请稍后再试\", 2);\n    return Promise.reject();\n  }\n\n  Toast.fail(error.response.data.message, 2);\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"sources":["/Users/hbt/MyProject/gitHub/react-diary/src/utils/request.js"],"names":["axios","Qs","Toast","instance","create","baseURL","timeout","interceptors","request","use","config","method","paramsSerializer","params","stringify","arrayFormat","error","Promise","reject","response","errObj","JSON","parse","message","fail","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SAASC,KAAT,QAAsB,aAAtB;AAEA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE,2BADmB;AAE5BC,EAAAA,OAAO,EAAE;AAFmB,CAAb,CAAjB,C,CAKA;;AACAH,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACEC,MAAM,IAAI;AACR,MAAIA,MAAM,CAACC,MAAP,KAAkB,KAAtB,EAA6B;AAC3BD,IAAAA,MAAM,CAACE,gBAAP,GAA0BC,MAAM,IAAI;AAClC,aAAOZ,EAAE,CAACa,SAAH,CAAaD,MAAb,EAAqB;AAAEE,QAAAA,WAAW,EAAE;AAAf,OAArB,CAAP;AACD,KAFD;AAGD;;AACD,SAAOL,MAAP;AACD,CARH,EASEM,KAAK,IAAI;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAXH,E,CAcA;;AACAb,QAAQ,CAACI,YAAT,CAAsBY,QAAtB,CAA+BV,GAA/B,CACEU,QAAQ,IAAI;AACV;AACA,SAAOA,QAAP;AACD,CAJH,EAKEH,KAAK,IAAI;AACP;AACA,MAAII,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACP,SAAL,CAAeE,KAAf,CAAX,CAAb;;AACA,MAAII,MAAM,CAACG,OAAP,KAAmB,eAAvB,EAAwC;AACtCrB,IAAAA,KAAK,CAACsB,IAAN,CAAW,YAAX,EAAyB,CAAzB;AACA,WAAOP,OAAO,CAACC,MAAR,EAAP;AACD;;AACDhB,EAAAA,KAAK,CAACsB,IAAN,CAAWR,KAAK,CAACG,QAAN,CAAeM,IAAf,CAAoBF,OAA/B,EAAwC,CAAxC;AACA,SAAON,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAdH;AAiBA,eAAeb,QAAf","sourcesContent":["import axios from \"axios\";\nimport Qs from \"qs\";\nimport { Toast } from \"antd-mobile\";\n\nconst instance = axios.create({\n  baseURL: \"http://139.196.94.6:3000/\",\n  timeout: 5000\n});\n\n// request 拦截\ninstance.interceptors.request.use(\n  config => {\n    if (config.method === \"get\") {\n      config.paramsSerializer = params => {\n        return Qs.stringify(params, { arrayFormat: \"brackets\" });\n      };\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n// response 拦截\ninstance.interceptors.response.use(\n  response => {\n    // 接口请求成功处理\n    return response;\n  },\n  error => {\n    // 提示给用户具体报错信息\n    let errObj = JSON.parse(JSON.stringify(error));\n    if (errObj.message === \"Network Error\") {\n      Toast.fail(\"服务器异常请稍后再试\", 2);\n      return Promise.reject();\n    }\n    Toast.fail(error.response.data.message, 2);\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}